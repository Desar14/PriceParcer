@model PriceParser.Models.ProductFromSite.ProductFromSiteDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>ProductFromSiteDetailsViewModel</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SiteName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SiteName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Path)
        </dt>
        <dd class="col-sm-10">
            <a href="@Html.DisplayFor(model => model.Path)">@Html.DisplayFor(model => model.Path)</a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DoNotParse)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DoNotParse)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ParseSchedule)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ParseSchedule)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedByUserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedByUserName)
        </dd>
    </dl>

    <input type="hidden" value="@Model.Id" id="entityId"/>
    <input type="date" id="startPeriod" name="chart-start"
       value="@DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd")"
       min="@DateTime.Now.AddMonths(-6).ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="reloadChart()">
    <input type="date" id="endPeriod" name="chart-end"
       value="@DateTime.Now.ToString("yyyy-MM-dd")"
       min="@DateTime.Now.AddMonths(-6).ToString("yyyy-MM-dd")" max="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="reloadChart()">
    @*<a class="btn btn-primary" id="reloadChartButton" onclick="reloadChart()">Reload chart</a>*@
    
    <div id="pricesChart"></div>
    <br />
    <a class="btn btn-primary" data-bs-toggle="collapse" href="#collapse-raw-prices" role="button" aria-expanded="false" aria-controls="collapse-raw-prices">
        Raw prices data
    </a>
    <div class="collapse" id="collapse-raw-prices">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Parse date</th>
                    <th scope="col">Full price</th>
                    <th scope="col">Discount price</th>
                    <th scope="col">Currency</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.productPrices)
                {
                    <tr>
                        <th scope="row">@item.ParseDate</th>
                        <td>@item.FullPrice</td>
                        <td>@item.DiscountPrice</td>
                        <td>@item.CurrencyCode</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br />
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" asp-fragment="" class="btn btn-primary">Edit</a>
    <a asp-action="Delete" asp-route-id="@Model.Id" asp-fragment="" class="btn btn-primary">Delete</a>
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
    <br />

    <a asp-action="ParsePrice" asp-route-id="@Model.Id" class="btn btn-primary">Parse current price</a>

</div>

@section Scripts
{

}